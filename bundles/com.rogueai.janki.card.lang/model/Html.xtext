// automatically generated by Xtext
grammar com.rogueai.janki.lang.html.Html with org.eclipse.xtext.common.Terminals

import "platform:/resource/com.rogueai.janki.lang.html/model/HTML.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

HTML returns HTML:
	'HTML'
	'{'
		'head' head=HEAD
		'body' body=BODY
	'}';



HTMLElement returns HTMLElement:
	HTMLElement_Impl | HEAD | LINK | TITLE | BODY | H1 | H2 | H3 | H4 | EM | STRONG | B | I | TT | PRE | BIG | SMALL | SUB | SUP | STRIKE | FONT | IMG | BR | MAP | AREA | STYLE | EMBED | NOEMBED | SPAN | A | DIV | P | TABLE | TR | TD_Impl | TH;

HEADElement returns HEADElement:
	LINK | TITLE;

BODYElement returns BODYElement:
	H1 | H2 | H3 | H4 | EM | STRONG | B | I | TT | PRE | BIG | SMALL | SUB | SUP | STRIKE | FONT | IMG | BR | MAP | AREA | STYLE | EMBED | NOEMBED | SPAN | A | DIV | P | TABLE | TR | TD_Impl | TH;


TD returns TD:
	TD_Impl | TH;

HEAD returns HEAD:
	'HEAD'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
		('headElements' '{' headElements+=HEADElement ( "," headElements+=HEADElement)* '}' )?
	'}';

BODY returns BODY:
	'BODY'
	'{'
		'value' value=String0
		'background' background=String0
		'bgcolor' bgcolor=String0
		'text' text=String0
		'link' link=String0
		'alink' alink=String0
		'vlink' vlink=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
		('bodyElements' '{' bodyElements+=BODYElement ( "," bodyElements+=BODYElement)* '}' )?
	'}';

String0 returns String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

HTMLElement_Impl returns HTMLElement:
	'HTMLElement'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

LINK returns LINK:
	'LINK'
	'{'
		'value' value=String0
		'rel' rel=String0
		'title' title=String0
		'ahref' ahref=String0
		'type' type=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

TITLE returns TITLE:
	'TITLE'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

H1 returns H1:
	'H1'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

H2 returns H2:
	'H2'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

H3 returns H3:
	'H3'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

H4 returns H4:
	'H4'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

EM returns EM:
	'EM'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

STRONG returns STRONG:
	'STRONG'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

B returns B:
	'B'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

I returns I:
	'I'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

TT returns TT:
	'TT'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

PRE returns PRE:
	'PRE'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

BIG returns BIG:
	'BIG'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

SMALL returns SMALL:
	'SMALL'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

SUB returns SUB:
	'SUB'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

SUP returns SUP:
	'SUP'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

STRIKE returns STRIKE:
	'STRIKE'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

FONT returns FONT:
	'FONT'
	'{'
		'value' value=String0
		'color' color=String0
		'face' face=String0
		'size' size=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

IMG returns IMG:
	'IMG'
	'{'
		'value' value=String0
		'src' src=String0
		'width' width=String0
		'height' height=String0
		'alt' alt=String0
		'align' align=String0
		'vspace' vspace=String0
		'hspace' hspace=String0
		'ismap' ismap=String0
		'usemap' usemap=String0
		'border' border=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

BR returns BR:
	'BR'
	'{'
		'value' value=String0
		'clear' clear=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

MAP returns MAP:
	'MAP'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

AREA returns AREA:
	'AREA'
	'{'
		'value' value=String0
		'shape' shape=String0
		'coords' coords=String0
		'ahref' ahref=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

STYLE returns STYLE:
	'STYLE'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

EMBED returns EMBED:
	'EMBED'
	'{'
		'value' value=String0
		'src' src=String0
		'width' width=String0
		'height' height=String0
		'align' align=String0
		'vspace' vspace=String0
		'hspace' hspace=String0
		'border' border=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

NOEMBED returns NOEMBED:
	'NOEMBED'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

SPAN returns SPAN:
	'SPAN'
	'{'
		'value' value=String0
		'style' style=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

A returns A:
	'A'
	'{'
		'value' value=String0
		'ahref' ahref=String0
		'name' name=String0
		'id' id=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

DIV returns DIV:
	'DIV'
	'{'
		'value' value=String0
		'align' align=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

P returns P:
	'P'
	'{'
		'value' value=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

TABLE returns TABLE:
	'TABLE'
	'{'
		'value' value=String0
		'bgcolor' bgcolor=String0
		'background' background=String0
		'border' border=String0
		'width' width=String0
		'cellspacing' cellspacing=String0
		'cellpadding' cellpadding=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
		('trs' '{' trs+=TR ( "," trs+=TR)* '}' )?
	'}';

TR returns TR:
	'TR'
	'{'
		'value' value=String0
		'bgcolor' bgcolor=String0
		'background' background=String0
		'valign' valign=String0
		'align' align=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
		('tds' '{' tds+=TD ( "," tds+=TD)* '}' )?
	'}';

TD_Impl returns TD:
	'TD'
	'{'
		'value' value=String0
		'bgcolor' bgcolor=String0
		'background' background=String0
		'colspan' colspan=String0
		'rowspan' rowspan=String0
		'valign' valign=String0
		'align' align=String0
		'width' width=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';

TH returns TH:
	'TH'
	'{'
		'value' value=String0
		'bgcolor' bgcolor=String0
		'background' background=String0
		'colspan' colspan=String0
		'rowspan' rowspan=String0
		'valign' valign=String0
		'align' align=String0
		'width' width=String0
		('children' '{' children+=HTMLElement ( "," children+=HTMLElement)* '}' )?
	'}';
