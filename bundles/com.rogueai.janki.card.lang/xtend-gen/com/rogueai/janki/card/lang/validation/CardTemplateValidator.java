/**
 * generated by Xtext
 */
package com.rogueai.janki.card.lang.validation;

import com.google.common.base.Objects;
import com.rogueai.janki.card.lang.cardTemplate.CardTemplatePackage.Literals;
import com.rogueai.janki.card.lang.cardTemplate.Tag;
import com.rogueai.janki.card.lang.validation.AbstractCardTemplateValidator;
import org.eclipse.xtext.validation.Check;

/**
 * Custom validation rules.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 * 
 * @author matsu
 */
@SuppressWarnings("all")
public class CardTemplateValidator extends AbstractCardTemplateValidator {
  public final static String INVALID_NAME = "invalidEndTagName";
  
  /**
   * Checks for a valid <code>end tag name</code>, e.g.:
   * <pre>
   * &lt;a>&lt;/a> - valid
   * &lt;a>&lt;/A> - valid
   * </pre>
   * TODO: validate correctly inline end tag, e.g.: <code>&lt;a /></code>
   */
  @Check
  public void checkEndTagName(final Tag tag) {
    String _endTagName = tag.getEndTagName();
    boolean _notEquals = (!Objects.equal(_endTagName, null));
    if (_notEquals) {
      String _endTagName_1 = tag.getEndTagName();
      String _startTagName = tag.getStartTagName();
      boolean _equalsIgnoreCase = _endTagName_1.equalsIgnoreCase(_startTagName);
      boolean _not = (!_equalsIgnoreCase);
      if (_not) {
        this.error("End tag name must match start tag name", 
          Literals.TAG__END_TAG_NAME, CardTemplateValidator.INVALID_NAME);
      }
    }
  }
}
